name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'  # Changed from pnpm

      - name: Install dependencies
        run: npm ci # Changed from pnpm install

      - name: Install Cypress binary
        run: npx cypress install # Changed from pnpm exec

      - name: Run Cypress tests
        run: npm run test:e2e # Changed from pnpm run
        continue-on-error: true  # 即使测试失败也继续执行

      - name: Generate Mochawesome Report
        run: npm run mochawesome:generate
        if: always()

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-test-results
          path: |
            cypress/videos
            cypress/screenshots
            cypress/reports/mochawesome
          retention-days: 30

      - name: Upload HTML Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mochawesome-report
          path: cypress/reports/mochawesome/*.html
          retention-days: 30

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Cypress Tests
          path: cypress/reports/mochawesome/*.json
          reporter: mochawesome-json
          fail-on-error: false

      - name: Add Test Summary
        if: always()
        run: |
          echo "## 🧪 Cypress Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f cypress/reports/mochawesome/mochawesome.json ]; then
            TOTAL=$(jq '.stats.tests' cypress/reports/mochawesome/mochawesome.json)
            PASSED=$(jq '.stats.passes' cypress/reports/mochawesome/mochawesome.json)
            FAILED=$(jq '.stats.failures' cypress/reports/mochawesome/mochawesome.json)
            SKIPPED=$(jq '.stats.skipped' cypress/reports/mochawesome/mochawesome.json)
            
            echo "| Metric | Count |" >> $GITHUB_STEP_SUMMARY
            echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| Total Tests | $TOTAL |" >> $GITHUB_STEP_SUMMARY
            echo "| ✅ Passed | $PASSED |" >> $GITHUB_STEP_SUMMARY
            echo "| ❌ Failed | $FAILED |" >> $GITHUB_STEP_SUMMARY
            echo "| ⏭️ Skipped | $SKIPPED |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📊 [Download detailed HTML report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ No test results found" >> $GITHUB_STEP_SUMMARY
          fi

  test-dashboard:
    name: Run Cypress Tests in Cypress Dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cypress run with Dashboard
        uses: cypress-io/github-action@v6
        with:
          # 如果需要构建
          build: npm run build
          # 如果需要启动开发服务器
          start: npm run dev
          # 等待服务器启动
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          # 指定浏览器
          browser: chrome
          # 自定义测试命令
          command: npm run test:e2e
          # 启用录制到 Cypress Dashboard
          record: true
          # 启用并行测试（可选）
          parallel: true
          # 指定配置文件
          config-file: cypress.config.js
        env:
          # Cypress Dashboard Record Key（需要在 GitHub Secrets 中配置）
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # GitHub token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # 自定义环境变量
          NODE_ENV: test
          CYPRESS_baseUrl: http://localhost:3000
        continue-on-error: true
  
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    # needs: test  # 等待测试完成，但不依赖其结果
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'  # Changed from pnpm

      - name: Install dependencies
        run: npm ci # Changed from pnpm install

      - name: Build
        run: npm run build # Changed from pnpm run
        env:
          # 如果有环境变量，在这里添加
          NODE_ENV: production
          GITHUB_PAGES: true

      # Next.js 15+ 使用 output: 'export' 配置，不需要单独的 export 命令
      # 构建输出将直接在 out 目录中

      - name: Add .nojekyll file
        run: touch out/.nojekyll

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: out  # Next.js 静态输出目录
          branch: gh-pages